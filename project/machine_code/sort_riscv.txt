/*
a0: 01010
a1: 01011

v : 00000010000000000000000000000000
n : 00000000000000000000000010000000

ra : 00001 - return address
sp : 00010 - stack pointer

s0/fp: 01000
s1 : 01001
s2 : 10010
s3 : 10011

t0 : 00101
t1 : 00110
t2 : 00111
t3 : 10110
t4 : 10111

base1: 14 -> 56
exit1: 31 -> 124
exit2: 29 -> 116



*/

1- la a0, v:
00000010000000000000 01010 0010111
000000000000 01010 000 01010 0010011

2- lw a1, n:
00010000000 00000 010 01011 0000011

3- jal sort:
00000010000000000000 00001  1101111

4- addi sp, sp, -20 :
10100 00010 000 00010 0010011

5- sw ra, 16(sp): 
0000000 00010 00001 010 10000 0100011

6- sw s3, 12(sp):
0000000 00010 10011 010 01010 0100011

7- sw s2, 8(sp):
0000000 00010 10010 010 01000 0100011

8- sw s1, 4(sp):
0000000 00010 01001 010 00100 0100011

9- sw s0, 0(sp):
0000000 00010 01000 010 00000 0100011


10- addi s2, a0, 0:
000000000000 01010 000 10010 0010011

11- addi s3, a1, 0:
000000000000 01010 000 10011 0010011

12- addi s0, $zero, 0:
000000000000 00000 000 01000 0010011

13- slt t0, s0, s3:
0000000 10011 01000 010 00101 0110011

14- beq t0, $zero, exit1:
0000010 00000 00101 000 0010 1100011

15- addi s1, s0, -1:
111111111111 01000 000 01001 0010011

16- slti t0, s1, 0:
000000000000 01001 010 00101 0010011

17- bne t0, $zero, exit2:
0000001 00000 00101 001 0110 1100011

18- slli t1, s1, 2:
000000000010 01001 010 00110 0010011

19- add t2, s2, t1:
0000000 00110 10010 000 00111 0110011

20- lw t3, 0(t2):
000000000000 00111 010 10110 0000011

21- lw t4, 4(t2)
000000000100 00111 010 10111 0000011

22- slt t0, t4, t3:
0000000 10110 10111 010 00101 0110011

23- beq t0, $zero, exit2
0000000 00000 00101 000 1100 1100011

24 - addi a0, s2, 0
000000000000 10010 000 01010 0010011

25- addi a1, s1, 0
000000000000 10001 000 01011 0010011

26- jal swap


